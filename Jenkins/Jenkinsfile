pipeline {
    agent {
        kubernetes {
            yamlFile 'Jenkins/KubernetesPod.yaml'
        }   
    } 

    // 환경변수 
    environment {
        IMAGE = 'jangsp57/demo-springboot:v2'
        BRANCH = 'main'
        // APP = ''
        DOCKER_REGISTRY = 'https://registry.dockerhub.com' 
        CREDENTIAL_REGISTRY = 'publicdocker'

    }
    stages { 
        stage('Maven Build') {
            steps {
                container('maven-jdk-node'){
                    // sh 'mvn -v'
                    // sh "mvn -P dev -f ./AdminApi/pom.xml clean package"
                    // sh "mvn clean package"
                    sh "ls -al ./target"
                    sh "pwd"
                    
                }
            }
        }
        stage('Build Docker Image'){
            steps {
                
                container('docker'){
                    sh '''
                        docker --version
                        ls
                        docker build -t ${IMAGE} .
                        docker images
                    '''
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                container('docker'){                         
                        sh '''
                        docker login -u jangsp57  -p jspdk2919!
                        docker push ${IMAGE}
                        // docker rmi ${IMAGE} -f 
                        '''
                }
            }
        }
        stage("kubectl deploy"){
            steps {
                container('kubectl'){
                    sh '''
                        kubectl create deployment --image=${IMAGE}
                        // sh "kubectl apply -n ${namespace} -f ${deployment}"
					    // sh "sleep 5"
					    // sh "kubectl apply -n ${namespace} -f ${service}"
					    // sh "kubectl apply -n ${namespace} -f ${ingress}"
                    '''
                }
            
            }
        }

    }   // End of stages 
} // End of pipeline
  